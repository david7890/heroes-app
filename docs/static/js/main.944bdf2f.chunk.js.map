{"version":3,"sources":["components/login/LoginScreen.js","auth/authContext.js","components/ui/NavBar.js","selectors/getHeroesByPublishers.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","components/marvel/MarvelScreen.js","components/dc/DcScreen.js","selectors/getHeroById.js","components/heroes/HeroScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashBoardRoutes.js","routers/AppRouter.js","App.js","serviceWorker.js","index.js","data/heroes.js"],"names":["LoginScreen","createContext","history","className","type","placeholder","onClick","push","Navbar","to","activeClassName","exact","heroes","require","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","style","maxWidth","src","alt","HeroList","includes","Error","filter","hero","getHeroesByPublisher","map","key","MarvelScreen","DcScreen","HeroScreen","heroeId","useParams","useMemo","find","length","goBack","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","useForm","searchName","formValues","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","onChange","autoComplete","DashBoardRoutes","path","component","AppRouter","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.944bdf2f.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\nimport { authContext } from '../../auth/authContext'\r\nimport { types } from '../../types/types'\r\n\r\nexport const LoginScreen = ({history}) => {\r\n    //extraer funcion\r\n    //const {dispatch} = useContext(authContext)\r\n\r\n    const handleLogin = () =>{\r\n        history.push('/')\r\n\r\n    }\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login</h1>\r\n            <hr></hr>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Escribe tu nombre\" \r\n                className=\"form-control\"\r\n            >\r\n            </input>\r\n            <button\r\n                className=\"btn btn-primary mt-3\"\r\n                onClick={handleLogin}\r\n            >\r\n                ENTRAR\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const authContext = createContext();\r\n","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/login\"\r\n                    >\r\n                        Logout\r\n                    </NavLink>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","const { heroes } = require(\"../data/heroes\");\r\n\r\nexport const getHeroesByPublisher = (publisher) =>{\r\n    const validPublishers = ['DC Comics', 'Marvel Comics']\r\n    if( !validPublishers.includes(publisher)){\r\n        throw new Error(`Publisher ${publisher}  no es correcto`);\r\n    }\r\n    return heroes.filter(hero =>hero.publisher === publisher)\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero, \r\n    publisher, \r\n    alter_ego,\r\n    first_appearance,\r\n    characters\r\n}) => {\r\n    return (\r\n        <div className=\"card ms-3\" style={{maxWidth: 540}}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero} />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{superhero}</h5>\r\n                        <p className=\"card-text\">\r\n                            {alter_ego}\r\n                        </p>\r\n                        {\r\n                            (alter_ego !== characters)\r\n                                 && <p className=\"card-text\">{characters}</p>\r\n                        }\r\n\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\">{first_appearance}</small>\r\n                        </p>\r\n\r\n                        <Link to={`./hero/${id}`}>\r\n                            Más ...\r\n                        </Link>                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublishers'\r\nimport { HeroCard } from './HeroCard'\r\n//props publisher\r\nexport const HeroList = ({publisher}) => {\r\n    const heroes = getHeroesByPublisher(publisher)\r\n\r\n    return (\r\n        <div className=\"card-columns animate_animated animate_fadeIn\">\r\n            {\r\n                heroes.map(hero =>(\r\n                    <HeroCard \r\n                        key={hero.id}\r\n                        //extrare todas las componentes del objeto\r\n                        {...hero}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"mt-5\">Marvel Screen</h1>\r\n            <hr></hr>\r\n            <HeroList publisher=\"Marvel Comics\" />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"mt-5\">DC Screen</h1>\r\n            <hr></hr>\r\n\r\n            <HeroList publisher=\"DC Comics\" />\r\n        </div>\r\n    )\r\n}\r\n","const { heroes } = require(\"../data/heroes\");\r\n\r\nexport const getHeroById = (id) =>{\r\n    //find regresa el primero que encuentre\r\n    return heroes.find(hero => hero.id === id)\r\n}","import React, { useMemo } from 'react'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\nimport { getHeroById } from '../../selectors/getHeroById'\r\n\r\nexport const HeroScreen = ({history}) => {\r\n    //extraer heroID de la url con hook useParams\r\n    const {heroeId} = useParams()\r\n    //optimizacion si el heroe no cambia no vuelve a mostrar info\r\n    const hero = useMemo( () => getHeroById(heroeId), [heroeId])\r\n    //buscarlo si no encuentra redirige a pag marvel\r\n    if( !hero){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    const handleReturn = () =>{\r\n        //regresar ala pag anterior\r\n        if(history.length <= 2 ){\r\n            history.push('/')\r\n        }\r\n        history.goBack()\r\n    }\r\n    //desestructurar objeto\r\n    const {\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters,\r\n    }= hero  \r\n\r\n    return ( \r\n        <div className=\"container row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img src={`./assets/heroes/${heroeId}.jpg`}\r\n                    className=\"img-thumbnail animate_animated animate_fadeIn\"\r\n                    alt={superhero}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-8\">\r\n                <h3>{superhero}</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"> <b>Alter Ego: </b> {alter_ego}</li>\r\n                    <li className=\"list-group-item\"> <b>Publisher: </b> {publisher} </li>\r\n                    <li className=\"list-group-item\"> <b>First appearence: </b> {first_appearance}</li>\r\n                </ul>\r\n\r\n                <h3>Characters</h3>\r\n                <p>{characters}</p>\r\n\r\n                <button className=\"btn btn-outline-info\" onClick={handleReturn}>\r\n                    Return\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n ","import React, { useMemo } from 'react'\r\nimport queryString from 'query-string'\r\nimport { heroes } from '../../data/heroes'\r\nimport { HeroCard } from '../heroes/HeroCard'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName'\r\n\r\nexport const SearchScreen = ({history}) => {\r\n\r\n    const location = useLocation()\r\n    //extraer query la buqueda \r\n    const {q = ''} = queryString.parse(location.search)\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        searchName: q\r\n    })\r\n\r\n    const {searchName} = formValues\r\n\r\n    //solo se dispara la busqueda si el query cambio\r\n    const heroesFiltered = useMemo(() => getHeroesByName(searchName), [q])\r\n\r\n    const handleSearch = (e) =>{\r\n        e.preventDefault()\r\n        //agregar texto de busqueda  query string al url\r\n        history.push(`?q=${searchName}`)\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"mt-5\">Search Screen</h1>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                    <hr></hr>\r\n                    <form onSubmit={handleSearch}>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Find your hero\" \r\n                            className=\"form-control\" \r\n                            name=\"searchName\" \r\n                            value={searchName}\r\n                            onChange={handleInputChange}\r\n                            autoComplete=\"off\"\r\n                        >\r\n                        </input>\r\n                        <button type=\"submit\" className=\"btn mt-2 btn-block btn-outline-primary\">\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-7\"> \r\n                    <h4>Results</h4>\r\n                    <hr></hr>\r\n                    {/*si no ha buscado muestra */}\r\n                    { (q==='') && <div className=\"alert alert-info\">\r\n                            Search a hero\r\n                        </div>}\r\n\r\n                    {\r\n                        //si no encuentra la busqueda\r\n                        (q !=='' && heroesFiltered.length === 0)\r\n                            &&\r\n                            <div className=\"alert alert-danger\">\r\n                                There is no a hero with {q}\r\n                            </div>\r\n                    }\r\n\r\n                    {\r\n                        heroesFiltered.map( hero => (\r\n                            <HeroCard className=\"m-3\" key={hero.id} {...hero}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import { heroes } from \"../data/heroes\"\r\n\r\nexport const getHeroesByName = (name = '') =>{\r\n    if(name === ''){\r\n        return []\r\n    }\r\n    return heroes.filter(hero => hero.superhero.toLocaleLowerCase().includes(name))\r\n}","import React from 'react'\r\nimport { Navbar } from '../components/ui/NavBar'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen'\r\nimport { DcScreen } from '../components/dc/DcScreen'\r\nimport { HeroScreen } from '../components/heroes/HeroScreen'\r\nimport { SearchScreen } from '../components/search/SearchScreen'\r\n\r\nexport const DashBoardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={MarvelScreen}></Route>\r\n                    <Route exact path=\"/dc\" component={DcScreen}></Route>\r\n                    <Route exact path=\"/search\" component={SearchScreen}></Route>\r\n                    <Route exact path=\"/hero/:heroeId\" component={HeroScreen}></Route>\r\n                    <Redirect to=\"/marvel\"></Redirect>\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { LoginScreen} from \"../components/login/LoginScreen\"\r\nimport { DashBoardRoutes } from \"./DashBoardRoutes\";\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                {/* A <Switch> looks through its children <Route>s and\r\n                    renders the first one that matches the current URL. */}\r\n                {/*si esta en esa ruta renderiza el componente*/}\r\n                <Switch>\r\n                    <Route exact path=\"/login\" component={ LoginScreen } />\r\n                    <Route path=\"/\" component={DashBoardRoutes}></Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n ","import React from 'react';\nimport {AppRouter} from \"./routers/AppRouter\"\n\nfunction App() {\n  return (\n    <AppRouter />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker, Milles Morales, Gwen'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]"],"sourceRoot":""}